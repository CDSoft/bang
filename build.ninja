# Ninja file generated by bang (https://cdelord.fr/bang)

######################################################################
# Ninja file for bang
# This file is generated by running bootstrap.sh
######################################################################

######################################################################
# This file is part of bang.
#
# bang is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# bang is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with bang.  If not, see <https://www.gnu.org/licenses/>.
#
# For further information about bang you can visit
# https://cdelord.fr/bang
######################################################################

######################################################################
# Build directories
######################################################################

builddir = .build
bin = $builddir/bin
test = $builddir/test
doc = $builddir/doc

######################################################################
# Compilation
######################################################################

rule luax
  description = LUAX $out
  command = luax -q -o $out $in

rule version
  description = GIT $version
  command = echo -n `git describe --tags` > $out

build $bin/bang: luax src/acc.lua src/atexit.lua src/bang.lua src/clean.lua src/file.lua src/help.lua src/install.lua src/log.lua src/ls.lua src/run.lua $builddir/version
build $builddir/version: version | .git/refs/tags .git/index
build compile: phony $bin/bang

default compile

######################################################################
# Tests
######################################################################

rule run_test
  description = BANG $in
  command = $bin/bang -q $in -o $out -- arg1 arg2 -x=y && touch $test/tmp/new_file.txt && touch $test/test.hlp

rule diff
  description = DIFF $in
  command = diff $in && touch $out

build $test/test.ninja | $test/tmp/new_file.txt $test/test.hlp: run_test test/test.lua | $bin/bang
build $test/test.ok: diff $test/test.ninja test/test.ninja
build $test/new_file.ok: diff $test/tmp/new_file.txt test/new_file.txt
build $test/test.hlp.ok: diff $test/test.hlp test/test.hlp
build test: phony $test/test.ok $test/new_file.ok $test/test.hlp.ok

default test

######################################################################
# Clean
######################################################################

rule clean-_builddir
  description = CLEAN $builddir
  command = rm -rf $builddir/*

build clean-_builddir: clean-_builddir
build clean: phony clean-_builddir

######################################################################
# Intallation
######################################################################

prefix = $$HOME/.local

rule install-bin
  description = INSTALL $in to bin
  command = install -v -D -t $${PREFIX:-$prefix}/bin $in

build install-bin: install-bin $bin/bang
build install: phony install-bin

######################################################################
# Help
######################################################################

rule help
  description = $in
  command = cat $in

build help: help build.hlp
