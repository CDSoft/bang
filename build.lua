section [[
Ninja file for bang
This file is generated by running bootstrap.sh
]]

section [[
This file is part of bang.

bang is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

bang is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with bang.  If not, see <https://www.gnu.org/licenses/>.

For further information about bang you can visit
https://cdelord.fr/bang
]]

local F = require "F"

help.name "Bang"
help.description [[Ninja file for building $name]]
help.epilog [[Without any arguments, Ninja will compile and test $name.]]

---------------------------------------------------------------------
-- Build directories
---------------------------------------------------------------------

section "Build directories"

var "builddir" ".build"

F"bin test doc" : words() : foreach(function(dir)
    var (dir) ("$builddir" / dir)
end)

clean "$builddir"

---------------------------------------------------------------------
-- Compilation
---------------------------------------------------------------------

section "Compilation"

build "$bin/bang" {
    description = "LUAX $out",
    command = "luax -q -o $out $in",

    ls "src/*.lua",
    ls "lib/*.lua",
    build "$builddir/version" {
        description = "GIT version",
        command = "echo -n `git describe --tags` > $out",
        implicit_in = ".git/refs/tags .git/index",
    }
}

phony "compile" { "$bin/bang" }
default "compile"
help "compile" "compile $name"

install "bin" "$bin/bang"

---------------------------------------------------------------------
-- Tests
---------------------------------------------------------------------

section "Tests"

rule "diff" {
    description = "DIFF $in",
    command = "diff $in > $out || (cat $out && false)",
}

phony "test" {
    build "$test/test.ninja" { "test/test.lua",
        description = "BANG $in",
        command = {
            "rm -f",
                "$test/tmp/new_file.txt",
            ";",
            "$bin/bang -q $in -o $out -- arg1 arg2 -x=y",
        },
        implicit_in = "$bin/bang",
        implicit_out = { "$test/tmp/new_file.txt" },
        validations = {
            build "$test/test.diff"     {"diff", {"$test/test.ninja",       "test/test.ninja"}},
            build "$test/new_file.diff" {"diff", {"$test/tmp/new_file.txt", "test/new_file.txt"}},
        },
    },
}

section "Stress tests"

phony "stress" {
    build "$test/stress/main.c" { "test/stress-gen.lua",
        description = "[stress test] Generate a HUGE C project",
        command = "$in $out",
        pool = "console",
    },
    build "$test/stress.ninja" { "test/stress.lua",
        description = "[stress test] BANG $in",
        command = "time $bin/bang $in -o $out -- $test/stress",
        pool = "console",
        implicit_in = {
            "$bin/bang",
            "$test/stress/main.c",
        },
    },
    build "$test/stress.done" { "$test/stress.ninja",
        description = "[stress test] NINJA $in",
        command = "time ninja -f $in && touch $out",
        pool = "console",
        implicit_in = "$test/stress.ninja",
    },
}

default "test"
help "test" "test $name"
